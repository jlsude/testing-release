name: Releases
on:
  push:
    branches:
      - master

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          output-file: "false"

      - name: Determine Release Version
        id: determine_version
        run: |
          # Retrieve the latest version from the changelog
          VERSION=$(echo "${{ steps.changelog.outputs.tag }}" | sed 's/^v//')

          CURRENT_STAGE="alpha"
          # Append the suffix "-alpha" to the version
          RELEASE_STAGES="${VERSION}-${CURRENT_STAGE}"

          # Update the package.json file with the alpha version
          npm version "$RELEASE_STAGES"

          # Push the updated package.json file to the repository
          git push --follow-tags origin master

          # Set the release_version environment variable
          echo "release_version=${RELEASE_STAGES}" >> $GITHUB_ENV
        shell: bash

      - name: Create GitHub Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ env.release_version }}  # Use the release_version environment variable
          release_name: ${{ env.release_version }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          prerelease: false # Set to true if you want to create a pre-release instead of a release
